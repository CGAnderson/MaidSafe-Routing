package maidsafe.routing.protobuf;

message layer {
  required int32 identifier = 1;
  required bytes message = 2;
}

message Endpoint {
  required bytes ip = 1;
  required int32 port = 2;
}

message Contact {
  required bytes node_id = 1;
  optional Endpoint endpoint = 2;
  repeated bytes local_ips = 3;
  optional int32 local_port = 4;
  optional Endpoint rendezvous = 5;
  optional bool tcp443 = 6;
  optional bool tcp80 = 7;
  optional bytes public_key_id = 8;
  optional bytes public_key = 9;
  optional bytes other_info = 10;
}

message ConfigFile {
  repeated Contact contact = 1;
  optional bytes private_key = 2;
  optional bytes node_id = 3;
}

// Message wrappers 

message Message {
  required bytes source_id = 1; // in response this is name of data
  required bytes destination_id = 2;
  optional bool  cachable = 3;
  optional bool  lock = 4;
  required bytes data = 5; // may be just chunk contents
  optional bytes signature = 6;
  optional bytes signature_id = 7; // sig that validates action
  optional bool direct = 8; // goes to a single node !!
  required bool response = 9;
  required int32 type = 10;
  optional bool failure = 11;
}

message ConnectRequest {
  optional bool client = 1;
  required Contact contact= 2;
  required Endpoint actual_endpoint_seen = 3; // filled in by first node in chain
}

message ConnectResponse {
  required bool answer = 1;
  required Contact contact = 2;
  required Endpoint actual_endpoint_seen = 3; // filled in by first node in chain
}

message FindNodesRequest {
  optional int32 num_nodes_requested = 1;
}

message FindNodesResponse {
  required bytes close_contacts = 1;
}
